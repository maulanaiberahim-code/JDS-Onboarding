import { QaseApiInterface, ResultStepStatus, TestStepResultCreateStatusEnum } from 'qaseio';
import { AbstractReporter } from './abstract-reporter';
import { StepStatusEnum, TestResultType, TestStatusEnum } from '../models';
import { LoggerInterface } from '../utils/logger';
export interface TestOpsRunType {
    id?: number | undefined;
    title: string;
    description: string;
    complete?: boolean | undefined;
}
export interface TestOpsPlanType {
    id?: number | undefined;
}
export interface TestOpsBatchType {
    size?: number | undefined;
}
export interface TestOpsOptionsType {
    project: string;
    uploadAttachments?: boolean | undefined;
    run: TestOpsRunType;
    plan: TestOpsPlanType;
    batch?: TestOpsBatchType;
    defect?: boolean | undefined;
    useV2?: boolean | undefined;
}
/**
 * @class TestOpsReporter
 * @extends AbstractReporter
 */
export declare class TestOpsReporter extends AbstractReporter {
    private api;
    /**
     * @type {Record<TestStatusEnum, string>}
     */
    static statusMap: Record<TestStatusEnum, string>;
    /**
     * @type {Record<StepStatusEnum, ResultStepStatus>}
     */
    static stepStatusMap: Record<StepStatusEnum, ResultStepStatus>;
    /**
     * @type {Record<StepStatusEnum, ResultStepStatus>}
     */
    static stepStatusMapV1: Record<StepStatusEnum, TestStepResultCreateStatusEnum>;
    /**
     * @type {string}
     * @private
     */
    private readonly baseUrl;
    /**
     * @type {string}
     * @private
     */
    private readonly projectCode;
    /**
     * @type {boolean | undefined}
     * @private
     */
    private readonly isUploadAttachments;
    /**
     * @type {TestOpsRunType}
     * @private
     */
    private run;
    /**
     * @type { string | undefined}
     * @private
     */
    private readonly environment;
    /**
     * @type { number | undefined}
     * @private
     */
    private readonly planId;
    /**
     * @type {TestResultType[]}
     * @private
     */
    private readonly batchSize;
    /**
     * @type {boolean | undefined}
     * @private
     */
    private readonly useV2;
    /**
     * @type {boolean | undefined}
     * @private
     */
    private readonly defect;
    /**
     * @type {string | undefined}
     * @private
     */
    private readonly rootSuite;
    /**
     * @type {number}
     * @private
     */
    private firstIndex;
    /**
     * @type {boolean}
     * @private
     */
    private isTestRunReady;
    /**
     * @param {LoggerInterface} logger
     * @param {ReporterOptionsType & TestOpsOptionsType} options
     * @param {QaseApiInterface} api
     * @param {string | undefined} environment
     * @param {string | undefined} rootSuite
     * @param {string | undefined} baseUrl
     */
    constructor(logger: LoggerInterface, options: TestOpsOptionsType, api: QaseApiInterface, environment?: string, rootSuite?: string, baseUrl?: string);
    /**
     * @returns {Promise<void>}
     */
    startTestRun(): Promise<void>;
    /**
     * @param {TestResultType} result
     * @returns {Promise<void>}
     */
    addTestResult(result: TestResultType): Promise<void>;
    /**
     * @returns {Promise<void>}
     */
    private checkOrCreateTestRun;
    /**
     * @returns {Promise<void>}
     * @param testResults
     * @private
     */
    private publishResults;
    /**
     * @returns {Promise<void>}
     */
    publish(): Promise<void>;
    /**
     * @returns {Promise<void>}
     */
    sendResults(): Promise<void>;
    /**
     * @returns {Promise<void>}
     */
    complete(): Promise<void>;
    /**
     * @param {TestResultType} result
     * @returns Promise<ResultCreateV2>
     * @private
     */
    private transformTestResult;
    /**
     * @param {TestResultType} result
     * @returns Promise<ResultCreate>
     * @private
     */
    private transformTestResultV1;
    /**
     * @returns {ResultExecution}
     * @private
     * @param {TestExecution} exec
     */
    private getExecution;
    /**
     * @param {Relation | null} relation
     * @returns {ResultRelations}
     * @private
     */
    private getRelation;
    /**
     * @param {TestStepType[]} steps
     * @param testTitle
     * @returns Promise<ResultStep[]>
     * @private
     */
    private transformSteps;
    /**
     * @param {TestStepType[]} steps
     * @param testTitle
     * @returns Promise<TestStepResultCreate[]>
     * @private
     */
    private transformStepsV1;
    private logEmptyStep;
    /**
     * @param {string} title
     * @param {string} description
     * @param {number | undefined} environment
     * @returns {Promise<IdResponse>}
     * @private
     */
    private createRun;
    /**
     * @returns {string}
     * @private
     */
    private getDate;
    /**
     * @returns {Promise<void>}
     * @private
     */
    private uploadAttachments;
    /**
     * Process error and throw QaseError
     * @param {Error | AxiosError} error
     * @param {string} message
     * @param {object} model
     * @private
     */
    private processError;
    /**
     * @param {string | undefined} url
     * @return string
     * @private
     */
    private getBaseUrl;
    /**
     * @param {number | null} id
     * @param {string} title
     * @return string
     * @private
     */
    private prepareFailedTestLink;
    /**
     * Show link to failed test
     * @param {number | null} id
     * @param {string} title
     * @private
     */
    private showLink;
}
