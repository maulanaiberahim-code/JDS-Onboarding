/**
 * Qase.io TestOps API v1
 * Qase TestOps API v1 Specification.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qase.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { BaseResponse } from '../model';
import { HashResponse } from '../model';
import { ResultCreate } from '../model';
import { ResultCreateResponse } from '../model';
import { ResultListResponse } from '../model';
import { ResultResponse } from '../model';
import { ResultUpdate } from '../model';
import { ResultcreateBulk } from '../model';
/**
 * ResultsApi - axios parameter creator
 * @export
 */
export declare const ResultsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * This method allows to create test run result by Run Id.
     * @summary Create test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {ResultCreate} resultCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createResult: (code: string, id: number, resultCreate: ResultCreate, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This method allows to create a lot of test run result at once.  If you try to send more than 2,000 results in a single bulk request, you will receive an error with code 413 - Payload Too Large.  If there is no free space left in your team account, when attempting to upload an attachment, e.g., through reporters, you will receive an error with code 507 - Insufficient Storage.
     * @summary Bulk create test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {ResultcreateBulk} resultcreateBulk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createResultBulk: (code: string, id: number, resultcreateBulk: ResultcreateBulk, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This method allows to delete test run result.
     * @summary Delete test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteResult: (code: string, id: number, hash: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This method allows to retrieve a specific test run result by Hash.
     * @summary Get test run result by code
     * @param {string} code Code of project, where to search entities.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getResult: (code: string, hash: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This method allows to retrieve all test run results stored in selected project.
     * @summary Get all test run results
     * @param {string} code Code of project, where to search entities.
     * @param {string} [status] A single test run result status. Possible values: in_progress, passed, failed, blocked, skipped, invalid.
     * @param {string} [run] A list of run IDs separated by comma.
     * @param {string} [caseId] A list of case IDs separated by comma.
     * @param {string} [member] A list of member IDs separated by comma.
     * @param {boolean} [api]
     * @param {string} [fromEndTime] Will return all results created after provided datetime. Allowed format: &#x60;Y-m-d H:i:s&#x60;.
     * @param {string} [toEndTime] Will return all results created before provided datetime. Allowed format: &#x60;Y-m-d H:i:s&#x60;.
     * @param {number} [limit] A number of entities in result set.
     * @param {number} [offset] How many entities should be skipped.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getResults: (code: string, status?: string, run?: string, caseId?: string, member?: string, api?: boolean, fromEndTime?: string, toEndTime?: string, limit?: number, offset?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This method allows to update test run result.
     * @summary Update test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {string} hash Hash.
     * @param {ResultUpdate} resultUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateResult: (code: string, id: number, hash: string, resultUpdate: ResultUpdate, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ResultsApi - functional programming interface
 * @export
 */
export declare const ResultsApiFp: (configuration?: Configuration) => {
    /**
     * This method allows to create test run result by Run Id.
     * @summary Create test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {ResultCreate} resultCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createResult(code: string, id: number, resultCreate: ResultCreate, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResultCreateResponse>>;
    /**
     * This method allows to create a lot of test run result at once.  If you try to send more than 2,000 results in a single bulk request, you will receive an error with code 413 - Payload Too Large.  If there is no free space left in your team account, when attempting to upload an attachment, e.g., through reporters, you will receive an error with code 507 - Insufficient Storage.
     * @summary Bulk create test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {ResultcreateBulk} resultcreateBulk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createResultBulk(code: string, id: number, resultcreateBulk: ResultcreateBulk, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BaseResponse>>;
    /**
     * This method allows to delete test run result.
     * @summary Delete test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteResult(code: string, id: number, hash: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HashResponse>>;
    /**
     * This method allows to retrieve a specific test run result by Hash.
     * @summary Get test run result by code
     * @param {string} code Code of project, where to search entities.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getResult(code: string, hash: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResultResponse>>;
    /**
     * This method allows to retrieve all test run results stored in selected project.
     * @summary Get all test run results
     * @param {string} code Code of project, where to search entities.
     * @param {string} [status] A single test run result status. Possible values: in_progress, passed, failed, blocked, skipped, invalid.
     * @param {string} [run] A list of run IDs separated by comma.
     * @param {string} [caseId] A list of case IDs separated by comma.
     * @param {string} [member] A list of member IDs separated by comma.
     * @param {boolean} [api]
     * @param {string} [fromEndTime] Will return all results created after provided datetime. Allowed format: &#x60;Y-m-d H:i:s&#x60;.
     * @param {string} [toEndTime] Will return all results created before provided datetime. Allowed format: &#x60;Y-m-d H:i:s&#x60;.
     * @param {number} [limit] A number of entities in result set.
     * @param {number} [offset] How many entities should be skipped.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getResults(code: string, status?: string, run?: string, caseId?: string, member?: string, api?: boolean, fromEndTime?: string, toEndTime?: string, limit?: number, offset?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ResultListResponse>>;
    /**
     * This method allows to update test run result.
     * @summary Update test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {string} hash Hash.
     * @param {ResultUpdate} resultUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateResult(code: string, id: number, hash: string, resultUpdate: ResultUpdate, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HashResponse>>;
};
/**
 * ResultsApi - factory interface
 * @export
 */
export declare const ResultsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * This method allows to create test run result by Run Id.
     * @summary Create test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {ResultCreate} resultCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createResult(code: string, id: number, resultCreate: ResultCreate, options?: any): AxiosPromise<ResultCreateResponse>;
    /**
     * This method allows to create a lot of test run result at once.  If you try to send more than 2,000 results in a single bulk request, you will receive an error with code 413 - Payload Too Large.  If there is no free space left in your team account, when attempting to upload an attachment, e.g., through reporters, you will receive an error with code 507 - Insufficient Storage.
     * @summary Bulk create test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {ResultcreateBulk} resultcreateBulk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createResultBulk(code: string, id: number, resultcreateBulk: ResultcreateBulk, options?: any): AxiosPromise<BaseResponse>;
    /**
     * This method allows to delete test run result.
     * @summary Delete test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteResult(code: string, id: number, hash: string, options?: any): AxiosPromise<HashResponse>;
    /**
     * This method allows to retrieve a specific test run result by Hash.
     * @summary Get test run result by code
     * @param {string} code Code of project, where to search entities.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getResult(code: string, hash: string, options?: any): AxiosPromise<ResultResponse>;
    /**
     * This method allows to retrieve all test run results stored in selected project.
     * @summary Get all test run results
     * @param {string} code Code of project, where to search entities.
     * @param {string} [status] A single test run result status. Possible values: in_progress, passed, failed, blocked, skipped, invalid.
     * @param {string} [run] A list of run IDs separated by comma.
     * @param {string} [caseId] A list of case IDs separated by comma.
     * @param {string} [member] A list of member IDs separated by comma.
     * @param {boolean} [api]
     * @param {string} [fromEndTime] Will return all results created after provided datetime. Allowed format: &#x60;Y-m-d H:i:s&#x60;.
     * @param {string} [toEndTime] Will return all results created before provided datetime. Allowed format: &#x60;Y-m-d H:i:s&#x60;.
     * @param {number} [limit] A number of entities in result set.
     * @param {number} [offset] How many entities should be skipped.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getResults(code: string, status?: string, run?: string, caseId?: string, member?: string, api?: boolean, fromEndTime?: string, toEndTime?: string, limit?: number, offset?: number, options?: any): AxiosPromise<ResultListResponse>;
    /**
     * This method allows to update test run result.
     * @summary Update test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {string} hash Hash.
     * @param {ResultUpdate} resultUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateResult(code: string, id: number, hash: string, resultUpdate: ResultUpdate, options?: any): AxiosPromise<HashResponse>;
};
/**
 * ResultsApi - object-oriented interface
 * @export
 * @class ResultsApi
 * @extends {BaseAPI}
 */
export declare class ResultsApi extends BaseAPI {
    /**
     * This method allows to create test run result by Run Id.
     * @summary Create test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {ResultCreate} resultCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResultsApi
     */
    createResult(code: string, id: number, resultCreate: ResultCreate, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ResultCreateResponse, any>>;
    /**
     * This method allows to create a lot of test run result at once.  If you try to send more than 2,000 results in a single bulk request, you will receive an error with code 413 - Payload Too Large.  If there is no free space left in your team account, when attempting to upload an attachment, e.g., through reporters, you will receive an error with code 507 - Insufficient Storage.
     * @summary Bulk create test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {ResultcreateBulk} resultcreateBulk
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResultsApi
     */
    createResultBulk(code: string, id: number, resultcreateBulk: ResultcreateBulk, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<BaseResponse, any>>;
    /**
     * This method allows to delete test run result.
     * @summary Delete test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResultsApi
     */
    deleteResult(code: string, id: number, hash: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<HashResponse, any>>;
    /**
     * This method allows to retrieve a specific test run result by Hash.
     * @summary Get test run result by code
     * @param {string} code Code of project, where to search entities.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResultsApi
     */
    getResult(code: string, hash: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ResultResponse, any>>;
    /**
     * This method allows to retrieve all test run results stored in selected project.
     * @summary Get all test run results
     * @param {string} code Code of project, where to search entities.
     * @param {string} [status] A single test run result status. Possible values: in_progress, passed, failed, blocked, skipped, invalid.
     * @param {string} [run] A list of run IDs separated by comma.
     * @param {string} [caseId] A list of case IDs separated by comma.
     * @param {string} [member] A list of member IDs separated by comma.
     * @param {boolean} [api]
     * @param {string} [fromEndTime] Will return all results created after provided datetime. Allowed format: &#x60;Y-m-d H:i:s&#x60;.
     * @param {string} [toEndTime] Will return all results created before provided datetime. Allowed format: &#x60;Y-m-d H:i:s&#x60;.
     * @param {number} [limit] A number of entities in result set.
     * @param {number} [offset] How many entities should be skipped.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResultsApi
     */
    getResults(code: string, status?: string, run?: string, caseId?: string, member?: string, api?: boolean, fromEndTime?: string, toEndTime?: string, limit?: number, offset?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ResultListResponse, any>>;
    /**
     * This method allows to update test run result.
     * @summary Update test run result
     * @param {string} code Code of project, where to search entities.
     * @param {number} id Identifier.
     * @param {string} hash Hash.
     * @param {ResultUpdate} resultUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ResultsApi
     */
    updateResult(code: string, id: number, hash: string, resultUpdate: ResultUpdate, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<HashResponse, any>>;
}
