import { ProjectsApi, CasesApi, ResultApi, ResultsApi, RunsApi, AttachmentsApi, PlansApi, SuitesApi, MilestonesApi, SharedStepsApi, DefectsApi, CustomFieldsApi, AuthorsApi, EnvironmentsApi } from './generated';
export type QaseApiOptionsType = {
    token: string;
    host?: string | undefined;
    headers?: Record<string, string | undefined> | undefined;
    retries?: number | undefined;
    retryDelay?: number | undefined;
};
export interface QaseApiInterface {
    projects: ProjectsApi;
    cases: CasesApi;
    result: ResultApi;
    results: ResultsApi;
    runs: RunsApi;
    attachments: AttachmentsApi;
    plans: PlansApi;
    suites: SuitesApi;
    milestones: MilestonesApi;
    sharedSteps: SharedStepsApi;
    defects: DefectsApi;
    customFields: CustomFieldsApi;
    authors: AuthorsApi;
    environment: EnvironmentsApi;
}
/**
 * @class QaseApi
 * @implements QaseApiInterface
 */
export declare class QaseApi implements QaseApiInterface {
    projects: ProjectsApi;
    cases: CasesApi;
    result: ResultApi;
    results: ResultsApi;
    runs: RunsApi;
    attachments: AttachmentsApi;
    plans: PlansApi;
    suites: SuitesApi;
    milestones: MilestonesApi;
    sharedSteps: SharedStepsApi;
    defects: DefectsApi;
    customFields: CustomFieldsApi;
    authors: AuthorsApi;
    environment: EnvironmentsApi;
    /**
     * @param {QaseApiOptionsType} options
     * @param {{new(): unknown}} formDataCtor
     */
    constructor(options: QaseApiOptionsType, formDataCtor?: new () => unknown);
}
