"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.qase = void 0;
const qase = (caseId, test) => {
    const caseIds = Array.isArray(caseId) ? caseId : [caseId];
    test.title = `${test.title} (Qase ID: ${caseIds.join(',')})`;
    return test;
};
exports.qase = qase;
/**
 * Set a title for the test case
 * @param {string} value
 * @example
 * it('test', () => {
 *    qase.title("Title");
 *    cy.visit('https://example.com');
 * });
 */
exports.qase.title = (value) => {
    return cy.task('qaseTitle', value).then(() => {
        //
    });
};
/**
 * Set fields for the test case
 * @param {Record<string, string>} values
 * @example
 * it('test', () => {
 *    qase.fields({description: "Description"});
 *    cy.visit('https://example.com');
 * });
 */
exports.qase.fields = (values) => {
    return cy.task('qaseFields', values).then(() => {
        //
    });
};
/**
 * Ignore the test case result in Qase
 * @example
 * it('test', () => {
 *    qase.ignore();
 *    cy.visit('https://example.com');
 * });
 */
exports.qase.ignore = () => {
    return cy.task('qaseIgnore').then(() => {
        //
    });
};
/**
 * Set parameters for the test case
 * @param {Record<string, string>} values
 * @example
 * it('test', () => {
 *    qase.parameters({param01: "value01"});
 *    cy.visit('https://example.com');
 * });
 */
exports.qase.parameters = (values) => {
    return cy.task('qaseParameters', values).then(() => {
        //
    });
};
/**
 * Set group parameters for the test case
 * @param {Record<string, string>} values
 * @example
 * it('test', () => {
 *    qase.groupParameters({param01: "value01"});
 *    cy.visit('https://example.com');
 * });
 */
exports.qase.groupParameters = (values) => {
    return cy.task('qaseGroupParameters', values).then(() => {
        //
    });
};
/**
 * Set a suite for the test case
 * @param {string} value
 * @example
 * it('test', () => {
 *    qase.suite("Suite 01");
 *    cy.visit('https://example.com');
 * });
 */
exports.qase.suite = (value) => {
    return cy.task('qaseSuite', value).then(() => {
        //
    });
};
/**
 * Set a comment for the test case
 * @param {string} value
 * @example
 * it('test', () => {
 *    qase.comment("Some comment");
 *    cy.visit('https://example.com');
 * });
 */
exports.qase.comment = (value) => {
    return cy.task('qaseComment', value).then(() => {
        //
    });
};
/**
 * Add a step to  the test case
 * @param {string} name
 * @param {() => T | PromiseLike<T>} body
 * @example
 * it('test', () => {
 *    qase.step("Some step", () => {
 *      // some actions
 *    });
 *    cy.visit('https://example.com');
 * });
 */
exports.qase.step = (name, body) => {
    return cy.task('qaseStepStart', name).then(() => {
        return Cypress.Promise.resolve(body());
    }).then(() => {
        cy.task('qaseStepEnd', 'passed').then(() => {
            //
        });
    });
};
/**
 * Attach a file to the test case or the step
 * @param attach
 * @example
 * it('test', () => {
 *   qase.attach({ name: 'attachment.txt', content: 'Hello, world!', contentType: 'text/plain' });
 *   qase.attach({ paths: '/path/to/file'});
 *   qase.attach({ paths: ['/path/to/file', '/path/to/another/file']});
 *   cy.visit('https://example.com');
 *  });
 */
exports.qase.attach = (attach) => {
    return cy.task('qaseAttach', attach).then(() => {
        //
    });
};
