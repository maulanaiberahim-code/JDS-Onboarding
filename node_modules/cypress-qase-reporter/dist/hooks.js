"use strict";
/// <reference types="cypress" />
Object.defineProperty(exports, "__esModule", { value: true });
const qase_javascript_commons_1 = require("qase-javascript-commons");
const configSchema_1 = require("./configSchema");
async function beforeRunHook(options) {
    const configLoader = new qase_javascript_commons_1.ConfigLoader(configSchema_1.configSchema);
    const config = configLoader.load();
    const { reporterOptions } = options;
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    const { ...composedOptions } = (0, qase_javascript_commons_1.composeOptions)(reporterOptions['cypressQaseReporterReporterOptions'], config);
    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
    const reporter = qase_javascript_commons_1.QaseReporter.getInstance({
        ...composedOptions,
        frameworkPackage: 'cypress',
        frameworkName: 'cypress',
        reporterName: 'cypress-qase-reporter',
    });
    // eslint-disable-next-line @typescript-eslint/no-unsafe-call
    await reporter.startTestRunAsync();
}
async function afterRunHook(options) {
    const configLoader = new qase_javascript_commons_1.ConfigLoader(configSchema_1.configSchema);
    const config = configLoader.load();
    const { reporterOptions } = options;
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
    const { ...composedOptions } = (0, qase_javascript_commons_1.composeOptions)(reporterOptions['cypressQaseReporterReporterOptions'], config);
    // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
    const reporter = qase_javascript_commons_1.QaseReporter.getInstance({
        ...composedOptions,
        frameworkPackage: 'cypress',
        frameworkName: 'cypress',
        reporterName: 'cypress-qase-reporter',
    });
    await reporter.complete();
}
module.exports = {
    beforeRunHook,
    afterRunHook,
};
